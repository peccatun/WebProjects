@{
    ViewData["Title"] = "Home Page";
}

<head>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
</head>

<div class="text-center">
    <h1 class="display-4">Chat application</h1>
    <div id="chat-box">
        <div>
            <label>Username: Petko</label>
            <p>This is my comment</p>
        </div>
    </div>
</div>
<hr />
<div class="container">
    <div class="row">
        <div class="col">
            <label>Enter comment</label>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <textarea style="width: 50%; height:100%;" id="input"></textarea>
        </div>
    </div>
    <button class="btn btn-success" style="margin-top: 1%;" onclick="submit()">Add comment</button>
</div>
<script>

    const CHAT_BOX = 'chat-box';
    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();



    connection.on("NewMessage",
        function (message) {
            let unsendButton = document.createElement("button");
            unsendButton.innerHTML = 'Unsend';
            unsendButton.addEventListener('click', ev => {
                let id = ev.target.parentNode.id;
                connection.invoke("Unsend", id);
            });
            let username = document.createElement("label");
            username.innerHTML = 'Username: ' + message.user;
            let content = document.createElement("p");
            content.innerHTML = message.text;
            let container = document.createElement("div");
            container.appendChild(username);
            container.appendChild(content);
            container.appendChild(unsendButton);
            container.id = Date.now().toString();
            document.getElementById(CHAT_BOX).appendChild(container);
        });

    connection.on("Unsend", function (id) {
        let chatBox = document.getElementById(CHAT_BOX);
        let targetId = id.substring(0, id.length - 1);
        for (let i = 0; chatBox.childNodes.length; i++) {
            let currentChild = chatBox.childNodes[i];
            if (currentChild.id == undefined) { continue; }
            let findId = currentChild.id.substring(0, currentChild.id.length - 1);
            if (findId == targetId) {
                currentChild.remove();
                //chatBox.childNodes.remove(i);
            }
        }
    });

    function submit() {
        let message = $("#input").val();
        connection.invoke("Send", message);
    }

    

    connection.start().catch(function (err) {
        return console.log(err.toString());
    });

    function addComment() {
        let message = $("#input").val();

        if (message.trim() == '') {
            alert("Enter message");
            return;
        }

        let userName = document.createElement("label");
        userName.innerHTML = 'User 1';
        let content = document.createElement("p");
        content.innerHTML = message;
        $("#input").val("");
        let containerDiv = document.createElement("div");
        containerDiv.appendChild(userName);
        containerDiv.appendChild(content);
        let chatBox = document.getElementById(CHAT_BOX);
        chatBox.appendChild(containerDiv);
    }
</script>